<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ks39.dao.UserMapper">

  <resultMap id="BaseResultMap" type="com.ks39.entity.User">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="uid" jdbcType="INTEGER" property="userid" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="lastlogintime" jdbcType="TIMESTAMP" property="lastlogintime" />
    <result column="role_id" jdbcType="VARCHAR" property="roleId"/>
    <result column="role_name" jdbcType="VARCHAR" property="rolename" />
  </resultMap>


<!--1. getList/Search-->
  <select id="UserGetList" resultMap="BaseResultMap" parameterType="com.ks39.entity.User">
          SELECT u.uid,u.username,u.state,u.createtime,u.lastlogintime,r.role_name
          FROM tb_user u, tb_role r
          WHERE u.role_id = r.rid
            <if test="userid != null and userid != ''">
                AND u.uid = #{userid}
            </if>

            <if test="username != null and username != ''">
            AND u.username = #{username}
            </if>
  </select>

<!--2. add -->
    <insert id="UserAdd" parameterType="com.ks39.entity.User">
        insert into tb_user(uid,username,password,state,role_id) values (null,#{username},#{password},#{state},#{roleId})
    </insert>

<!--3. edit-->
    <update id="UserEdit" parameterType="com.ks39.entity.User">
        update tb_user
        <set>
            <if test="username != null">
                username = #{username},
            </if>

            <if test="password != null">
                password = #{password},
            </if>

            <if test="state != null">
                state = #{state},
            </if>

            <if test="roleId != null">
                role_id = #{roleId}
            </if>
        </set>
        where uid = #{userid}
    </update>

<!--4. delete-->
    <delete id="UserDelete" parameterType="com.ks39.entity.User">
        delete from tb_user where uid = #{userid}
    </delete>

<!--    //5. shiro —— findByUserName-->
    <select id="findByUserName" resultMap="BaseResultMap">
        select * from tb_user where username = #{username};
    </select>

<!--    //6. shiro —— selectRoleByUserName-->
    <select id="selectRoleByUserName" resultType="String" parameterType="String">
        SELECT r.role_name
        FROM tb_user u, tb_role r
        WHERE u.role_id = r.rid
        AND username = #{username}
    </select>

<!--    //7. shiro —— selectPermsByUserName-->
    <select id="selectPermsByUserName" resultType="String" parameterType="String">
        SELECT p.url
        FROM tb_user u, tb_role r, tb_role_permission rp, tb_permission p
        WHERE u.role_id = r.rid
        AND r.rid = rp.rid
		AND p.pid = rp.pid
		AND u.username = #{username}
    </select>
    
<!--8. updateLastLoginTime-->
    <update id="UserUpdateLastLoginTime">
        update tb_user
        set lastlogintime = current_timestamp
        where username = #{username}
    </update>

</mapper>